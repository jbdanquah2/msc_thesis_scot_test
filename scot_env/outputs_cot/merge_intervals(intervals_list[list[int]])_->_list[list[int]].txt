### Reasoning
To merge overlapping intervals, we can follow these steps:
1. Sort the intervals based on the start value.
2. Initialize an empty list to store the merged intervals.
3. Iterate through the sorted intervals and check if the current interval overlaps with the previous merged interval.
4. If there is an overlap, update the end value of the previous merged interval.
5. If there is no overlap, add the current interval to the merged list.
6. Return the merged list of intervals.

### Final Code
```python
def merge_intervals(intervals: list[list[int]]) -> list[list[int]]:
    if not intervals:
        return []

    intervals.sort(key=lambda x: x[0])  # Sort intervals based on start value
    merged = [intervals[0]]

    for i in range(1, len(intervals)):
        current_interval = intervals[i]
        last_merged = merged[-1]

        if current_interval[0] <= last_merged[1]:  # Check for overlap
            last_merged[1] = max(last_merged[1], current_interval[1])
        else:
            merged.append(current_interval)

    return merged
```